
@import './common.scss';
@import './ordering.scss';
@import './processing.scss';
@import './typography.scss';

// jQuery UI stylesheet imports this one - there are just two places where we
// don't want DataTabels default styles assigned for jQuery UI, so rather than
// duplicating the whole file, this is the best option
$jqueryui: false !default;

// Chrome 83's default inputs are really ugly, so we need to do this for all
@mixin table-input {
	border: 1px solid #aaa;
	border-radius: 3px;
	padding: 5px;
	background-color: transparent;
	color: inherit;
}

/*
 * Table styles
 */
table.dataTable {
	width: 100%;
	margin: 0 auto;
	clear: both;
	border-collapse: separate;
	border-spacing: 0;

	/*
	 * Header and footer styles
	 */
	thead,
	tfoot {
		th {
			font-weight: bold;
		}
	}

	> thead > tr > th,
	> thead > tr > td {
		padding: 10px;

		&:active {
			outline: none;
		}
	}

	> tfoot > tr > th,
	> tfoot > tr > td {
		padding: 10px 10px 6px 10px;
	}

	/*
	 * Body styles
	 */
	> tbody {
		> tr {
			background-color: $table-row-background;

			&:first-child > * {
				border-top: $table-header-border;
			}

			&:last-child > * {
				border-bottom: $table-header-border;
			}

			&.selected > * {
				box-shadow: inset 0 0 0 9999px rgba(rgb($table-row-selected), 0.9);
				box-shadow: inset 0 0 0 9999px rgba(var(--dt-row-selected), 0.9);
				color: rgb($table-row-selected-text);
				color: rgb(var(--dt-row-selected-text));
			}
	
			&.selected a {
				color: rgb($table-row-selected-link);
				color: rgb(var(--dt-row-selected-link));
			}

			> th,
			> td {
				padding: 8px 10px;
			}
		}
	}


	// Stripe classes - add "row-border" class to the table to activate
	&.row-border > tbody,
	&.display > tbody {
		> tr > * {
			border-top: $table-body-border;
		}

		> tr:first-child > * {
			border-top: $table-header-border;
		}

		> tr.selected + tr.selected > td {
			border-top-color: darken(rgb($table-row-selected), 5%);
		}
	}


	// Stripe classes - add "cell-border" class to the table to activate
	&.cell-border > tbody {
		> tr > * {
			border-top: $table-body-border;
			border-right: $table-body-border;
		}

		> tr > *:first-child {
			border-left: $table-body-border;
		}

		> tr:first-child > * {
			border-top: $table-header-border;
		}
	}


	// Stripe classes - add "stripe" class to the table to activate
	&.stripe > tbody,
	&.display > tbody {
		> tr:nth-child(odd) > * {
			box-shadow: inset 0 0 0 9999px rgba(0, 0, 0, 0.023);
			box-shadow: inset 0 0 0 9999px rgba(var(--dt-row-stripe), 0.023);
		}

		> tr:nth-child(odd).selected > * {
			box-shadow: inset 0 0 0 9999px rgba(rgb($table-row-selected), 0.923);
			box-shadow: inset 0 0 0 9999px rgba(var(--dt-row-selected), 0.923);
		}
	}



	// Hover classes - add "hover" class to the table to activate
	&.hover > tbody,
	&.display > tbody {
		> tr:hover > * {
			box-shadow: inset 0 0 0 9999px rgba(0, 0, 0, 0.035);
			box-shadow: inset 0 0 0 9999px rgba(var(--dt-row-hover), 0.035);
		}

		> tr.selected:hover > * {
			box-shadow: inset 0 0 0 9999px rgba(rgb($table-row-selected), 1) !important;
			box-shadow: inset 0 0 0 9999px rgba(var(--dt-row-selected), 1) !important;
		}
	}


	// Sort column highlighting - add "order-column" class to the table to activate
	&.order-column,
	&.display {
		> tbody {
			tr > .sorting_1,
			tr > .sorting_2,
			tr > .sorting_3 {
				box-shadow: inset 0 0 0 9999px rgba(0, 0, 0, 0.019);
				box-shadow: inset 0 0 0 9999px rgba(var(--dt-column-ordering), 0.019);
			}

			tr.selected > .sorting_1,
			tr.selected > .sorting_2,
			tr.selected > .sorting_3 {
				box-shadow: inset 0 0 0 9999px rgba(rgb($table-row-selected), 0.919);
				box-shadow: inset 0 0 0 9999px rgba(var(--dt-row-selected), 0.919);
			}
		}
	}
	&.display > tbody,
	&.order-column.stripe > tbody {
		> tr:nth-child(odd) {
			> .sorting_1 {
				box-shadow: inset 0 0 0 9999px rgba(0, 0, 0, 0.054);
				box-shadow: inset 0 0 0 9999px rgba(var(--dt-column-ordering), 0.054);
			}
			> .sorting_2 {
				box-shadow: inset 0 0 0 9999px rgba(0, 0, 0, 0.047);
				box-shadow: inset 0 0 0 9999px rgba(var(--dt-column-ordering), 0.047);
			}
			> .sorting_3 {
				box-shadow: inset 0 0 0 9999px rgba(0, 0, 0, 0.039);
				box-shadow: inset 0 0 0 9999px rgba(var(--dt-column-ordering), 0.039);
			}

			&.selected {
				> .sorting_1 {
					box-shadow: inset 0 0 0 9999px rgba(rgb($table-row-selected), 0.954);
					box-shadow: inset 0 0 0 9999px rgba(var(--dt-row-selected), 0.954);
				}
				> .sorting_2 {
					box-shadow: inset 0 0 0 9999px rgba(rgb($table-row-selected), 0.947);
					box-shadow: inset 0 0 0 9999px rgba(var(--dt-row-selected), 0.947);
				}
				> .sorting_3 {
					box-shadow: inset 0 0 0 9999px rgba(rgb($table-row-selected), 0.939);
					box-shadow: inset 0 0 0 9999px rgba(var(--dt-row-selected), 0.939);
				}
			}
		}

		> tr.even {
			> .sorting_1 {
				box-shadow: inset 0 0 0 9999px rgba(0, 0, 0, 0.019);
				box-shadow: inset 0 0 0 9999px rgba(var(--dt-row-selected), 0.019);
			}
			> .sorting_2 {
				box-shadow: inset 0 0 0 9999px rgba(0, 0, 0, 0.011);
				box-shadow: inset 0 0 0 9999px rgba(var(--dt-row-selected), 0.011);
			}
			> .sorting_3 {
				box-shadow: inset 0 0 0 9999px rgba(0, 0, 0, 0.003);
				box-shadow: inset 0 0 0 9999px rgba(var(--dt-row-selected), 0.003);
			}
			
			&.selected {
				> .sorting_1 {
					box-shadow: inset 0 0 0 9999px rgba(rgb($table-row-selected), 0.919);
					box-shadow: inset 0 0 0 9999px rgba(var(--dt-row-selected), 0.919);
				}
				> .sorting_2 {
					box-shadow: inset 0 0 0 9999px rgba(rgb($table-row-selected), 0.911);
					box-shadow: inset 0 0 0 9999px rgba(var(--dt-row-selected), 0.911);
				}
				> .sorting_3 {
					box-shadow: inset 0 0 0 9999px rgba(rgb($table-row-selected), 0.903);
					box-shadow: inset 0 0 0 9999px rgba(var(--dt-row-selected), 0.903);
				}
			}
		}
	}

	&.display tbody,
	&.order-column.hover tbody {
		tr:hover {
			> .sorting_1 {
				box-shadow: inset 0 0 0 9999px rgba(0, 0, 0, 0.082);
				box-shadow: inset 0 0 0 9999px rgba(var(--dt-row-hover), 0.082);
			}
			> .sorting_2 {
				box-shadow: inset 0 0 0 9999px rgba(0, 0, 0, 0.074);
				box-shadow: inset 0 0 0 9999px rgba(var(--dt-row-hover), 0.074);
			}
			> .sorting_3 {
				box-shadow: inset 0 0 0 9999px rgba(0, 0, 0, 0.062);
				box-shadow: inset 0 0 0 9999px rgba(var(--dt-row-hover), 0.062);
			}

			&.selected {
				> .sorting_1 {
					box-shadow: inset 0 0 0 9999px rgba(rgb($table-row-selected), 0.982);
					box-shadow: inset 0 0 0 9999px rgba(var(--dt-row-selected), 0.982);
				}
				> .sorting_2 {
					box-shadow: inset 0 0 0 9999px rgba(rgb($table-row-selected), 0.974);
					box-shadow: inset 0 0 0 9999px rgba(var(--dt-row-selected), 0.974);
				}
				> .sorting_3 {
					box-shadow: inset 0 0 0 9999px rgba(rgb($table-row-selected), 0.962);
					box-shadow: inset 0 0 0 9999px rgba(var(--dt-row-selected), 0.962);
				}
			}
		}
	}

	&.compact {
		thead,
		tfoot,
		tbody {
			th,
			td {
				padding: 4px;
			}
		}
	}
}

table.dataTable,
table.dataTable th,
table.dataTable td {
	box-sizing: border-box;
}


/*
 * Control feature layout
 */
div.dt-container {
	position: relative;
	clear: both;

	div.dt-layout-row {
		display: table;
		clear: both;
		width: 100%;
		table-layout: fixed;
	}

	div.dt-layout-cell {
		display: table-cell;
		vertical-align: middle;
		padding: 5px 0;

		&.dt-full {
			text-align: center;
		}

		&.dt-left {
			text-align: left;
		}

		&.dt-right {
			text-align: right;
		}
	}

	.dt-search {
		input {
			@include table-input;
			margin-left: 3px;
		}
	}

	.dt-input {
		@include table-input;
	}

	select.dt-input {
		// 5px is 1px too much to equal the height of the input elements
		padding: 4px;
	}

	// Paging
	.dt-paging {
		.dt-paging-button {
			box-sizing: border-box;
			display: inline-block;
			min-width: 1.5em;
			padding: 0.5em 1em;
			margin-left: 2px;
			text-align: center;
			text-decoration: none !important;
			cursor: pointer;

			color: $table-control-color !important;
			border: 1px solid transparent;
			border-radius: 2px;
			background: transparent;

			&.current,
			&.current:hover {
				color: $table-control-color !important;
				border: $table-header-border;
				@include gradient(
					lighten($table-paging-button-active, 90%),
					$table-paging-button-active
				);
			}

			&.disabled,
			&.disabled:hover,
			&.disabled:active {
				cursor: default;
				color: rgba(0, 0, 0, 0.5) !important;
				border: 1px solid transparent;
				background: transparent;
				box-shadow: none;
			}

			&:hover {
				color: white !important;
				border: 1px solid $table-paging-button-hover;
				@include gradient(
					lighten($table-paging-button-hover, 28%),
					$table-paging-button-hover
				);
			}

			&:active {
				outline: none;
				@include gradient(
					lighten($table-paging-button-hover, 10%),
					darken($table-paging-button-hover, 2%)
				);
				box-shadow: inset 0 0 3px #111;
			}
		}

		.ellipsis {
			padding: 0 1em;
		}
	}

	.dt-length,
	.dt-search,
	.dt-info,
	.dt-processing,
	.dt-paging {
		color: $table-control-color;
	}

	// Scrolling
	.dataTables_scroll {
		clear: both;

		div.dt-scroll-body {
			-webkit-overflow-scrolling: touch;

			> table > thead > tr, > table > tbody > tr {
				> th, > td {
					// Setting v-align baseline can cause the headers to be visible
					vertical-align: middle;
				}

				> th > div.dataTables_sizing,
				> td > div.dataTables_sizing {
					// Hide the element used to wrap the content in the header for
					// the body scrolling table
					height: 0;
					overflow: hidden;
					margin: 0 !important;
					padding: 0 !important;
				}
			}
		}
	}

	.dt-scroll-body {
		tbody > tr:first-child > * {
			border-top: none;
		}

		tbody > tr:last-child > * {
			border-bottom: none;
		}

		border-top: $table-header-border;
		border-bottom: $table-header-border;
	}

	// Self clear the wrapper
	&:after {
		visibility: hidden;
		display: block;
		content: "";
		clear: both;
		height: 0;
	}
}


// Collapse the two column display of the control elements when the screen is
// small
@media screen and (max-width: 767px) {
	div.dt-container {
		div.dt-layout-row {
			display: block;
		}

		div.dt-layout-cell {
			display: block;
			
			&.dt-full,
			&.dt-left,
			&.dt-right {
				text-align: center;
			}
		}
	}
}

@media screen and (max-width: 640px) {
	.dt-container {
		.dt-length,
		.dt-search {
			float: none;
			text-align: center;
		}

		.dt-search {
			margin-top: 0.5em;
		}
	}
}


html.dark {
	--dt-row-hover: 255, 255, 255;
	--dt-row-stripe: 255, 255, 255;
	--dt-column-ordering: 255, 255, 255;

	table.dataTable {
		> thead > tr > th,
		> thead > tr > td {
			@if not $jqueryui { // jQuery UI defines its own border
				border-bottom: $table-header-border-dark;
			}
	
			&:active {
				outline: none;
			}
		}
	
		> tfoot > tr > th,
		> tfoot > tr > td {
			@if not $jqueryui { // jQuery UI defines its own border
				border-top: $table-header-border-dark;
			}
		}

		// Stripe classes - add "row-border" class to the table to activate
		&.row-border > tbody,
		&.display > tbody {
			> tr > th,
			> tr > td {
				border-top: $table-body-border-dark;
			}

			> tr.selected + tr.selected > td {
				border-top-color: darken(rgb($table-row-selected), 10%);
			}
		}
	
	
		// Stripe classes - add "cell-border" class to the table to activate
		&.cell-border > tbody {
			> tr > th,
			> tr > td {
				border-top: $table-body-border-dark;
				border-right: $table-body-border-dark;
			}
	
			> tr > th:first-child,
			> tr > td:first-child {
				border-left: $table-body-border-dark;
			}
		}
	}

	.dt-container {
		// Chrome 83 hack - see top of file
		.dt-search input,
		.dt-length select {
			border: 1px solid rgb(255, 255, 255, 0.2);
			background-color: var(--dt-html-background);
		}

		.dt-paging {
			.dt-paging-button {
				&.current,
				&.current:hover {
					border: $table-header-border-dark;
					background: $table-paging-button-active-dark;
				}

				&.disabled,
				&.disabled:hover,
				&.disabled:active {
					color: #666 !important;
				}

				&:hover {
					border: 1px solid $table-paging-button-hover-dark;
					background: $table-paging-button-hover-dark;
				}

				&:active {
					background: lighten($table-paging-button-hover-dark, 2%);
				}
			}
		}
	}
}
