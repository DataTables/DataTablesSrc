<?xml version="1.0" encoding="UTF-8" ?>
<dt-example table-type="html" order="8">

<css lib="datatables" />
<js lib="jquery" />
<js lib="datatables" />

<title>Table controls positioning</title>
<js><![CDATA[
$('#example').DataTable({
	layout: {
		topStart: 'info',
		bottom: 'paging',
		bottomStart: null,
		bottomEnd: null
	}
});
]]></js>
<js-vanilla>
<![CDATA[
new DataTable('#example', {
	layout: {
		topStart: 'info',
		bottom: 'paging',
		bottomStart: null,
		bottomEnd: null
	}
});
]]>
</js-vanilla>

<info><![CDATA[

When customising DataTables for your own usage, you might find that the default position of the feature elements (for example the search input) is not quite to your liking or needs to be altered to fit with the layout of your application. DataTables provides the ability to customise these table controls using the `-init layout` option.

`-init layout` is an object where each property key defines the position and the matching value is the element to show in that position. The value can be a string value matching one of the built in options, or a plug-in if you use any, an HTML element or plain text. It can also be an array of those options for multiple items in each position, or `null` to show nothing. Please refer to the `-init layout` documentation for full details.

The default layout used by DataTables is:

```js
layout: {
	topStart: 'pageLength',
	topEnd: 'search',
	bottomStart: 'info',
	bottomEnd: 'paging'
}
```

In this example the page length information is replaced by the table information display and the pagination control is shown across the whole of the table's footer area. Note that the `bottomStart` and `bottomEnd` properties are set to be `null` otherwise their default options would be shown.


]]></info>

</dt-example>
