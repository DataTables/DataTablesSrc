<?xml version="1.0" encoding="UTF-8" ?>
<dt-example table-type="html" order="11">

<css lib="datatables" />
<js lib="jquery" />
<js lib="datatables" />

<title>Alternative pagination</title>
<js><![CDATA[
$('#example').DataTable({
	layout: {
		bottomEnd: {
			paging: {
				firstLast: false
			}
		}
	}
});
]]></js>
<js-vanilla>
<![CDATA[
new DataTable('#example', {
	layout: {
		bottomEnd: {
			paging: {
				firstLast: false
			}
		}
	}
});
]]>
</js-vanilla>

<info><![CDATA[

The default page control presented by DataTables (first, last, forward and backward buttons with up to 7 page numbers in-between) is fine for most situations, but there are cases where you may wish to customise the options presented to the end user. This is done through the `-feature paging` feature's options. Specifically:

* `-feature paging.numbers` - Control if the buttons with page numbers will be shown or not
* `-feature paging.firstLast` - Control the display of the _First_ and _Last_ buttons
* `-feature paging.previousNext` - Control the display of the _Previous_ and _Next_ buttons.

These options can be combined to provide complete control over the buttons that the paging control will show. Also, the language strings for the page control icons etc can be optionally changed through the internationalisation options of DataTables; `-init language.paginate.first`, `-init language.paginate.previous` etc.

The example below shows the paging control with first and last buttons disabled (which was the default paging display in DataTables 1).

It is also possible to make use of external plugins to control the paging in DataTables. For example, [see this blog post](https://datatables.net/blog/2024/inputPaging) which introduces a plugin that allows the end user to type in the page number they want to show.

]]></info>

</dt-example>
