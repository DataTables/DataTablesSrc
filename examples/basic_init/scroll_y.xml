<?xml version="1.0" encoding="UTF-8" ?>
<dt-example table-type="html" order="12">

<css lib="datatables" />
<js lib="jquery" />
<js lib="datatables" />

<title>Scroll - vertical</title>
<js><![CDATA[
$(document).ready(function () {
	$('#example').DataTable({
		scrollY: '200px',
		scrollCollapse: true,
		paging: false,
	});
});
]]></js>
<js-vanilla>
<![CDATA[
document.addEventListener('DOMContentLoaded', function () {
    new DataTable('#example', {
		scrollY: '200px',
		scrollCollapse: true,
		paging: false,
	});
});
]]>
</js-vanilla>

<info><![CDATA[

This example shows the DataTables table body scrolling in the vertical direction. This can generally be seen as an alternative method to pagination for displaying a large table in a fairly small vertical area, and as such pagination has been disabled here (note that this is not mandatory, it will work just fine with pagination enabled as well!).

To enable y-scrolling simply set the `dt-init scrollY` parameter to be whatever you want the container wrapper's height to be (any CSS measurement is acceptable, or just a number which is treated as pixels).

Note also that the `dt-init scrollCollapse` option is enabled in this example. This will have the container match the height of the rows shown in the table if that height is smaller than that given height by the `dt-init scrollY`.

]]></info>

</dt-example>
