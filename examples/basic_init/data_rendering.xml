<?xml version="1.0" encoding="UTF-8" ?>
<dt-example table-type="ajax-renderer" order="11" table-class="display nowrap">

<css lib="datatables" />
<css lib="world-flags-sprite" />
<css>
	.f32 .flag {
		vertical-align: middle;
		margin: -8px 0;
	}

	progress {
		width: 100%;
	}
</css>
<js lib="jquery" />
<js lib="datatables" />

<title>Data rendering</title>
<js><![CDATA[
$('#example').DataTable({
	ajax: '../ajax/data/objects_salary.txt',
	columns: [
		{
			data: 'name'
		},
		{
			data: 'position',
			render: function (data, type) {
				if (type === 'display') {
					let link = 'http://datatables.net';

					if (data[0] < 'H') {
						link = 'http://cloudtables.com';
					}
					else if (data[0] < 'S') {
						link = 'http://editor.datatables.net';
					}

					return '<a href="' + link + '">' + data + '</a>';
				}

				return data;
			}
		},
		{
			className: 'f32', // used by world-flags-sprite library
			data: 'office',
			render: function (data, type) {
				if (type === 'display') {
					let country = '';

					switch (data) {
						case 'Argentina':
							country = 'ar';
							break;
						case 'Edinburgh':
							country = '_Scotland';
							break;
						case 'London':
							country = '_England';
							break;
						case 'New York':
						case 'San Francisco':
							country = 'us';
							break;
						case 'Sydney':
							country = 'au';
							break;
						case 'Tokyo':
							country = 'jp';
							break;
					}

					return '<span class="flag ' + country + '"></span> ' + data;
				}

				return data;
			}
		},
		{
			data: 'extn',
			render: function (data, type, row, meta) {
				return type === 'display'
					? '<progress value="' + data + '" max="9999"></progress>'
					: data;
			}
		},
		{
			data: 'start_date'
		},
		{
			data: 'salary',
			render: function (data, type) {
				var number = $.fn.dataTable.render
					.number(',', '.', 2, '$')
					.display(data);

				if (type === 'display') {
					let color = 'green';
					if (data < 250000) {
						color = 'red';
					}
					else if (data < 500000) {
						color = 'orange';
					}

					return (
						'<span style="color:' +
						color +
						'">' +
						number +
						'</span>'
					);
				}

				return number;
			}
		}
	]
});
]]></js>
<js-vanilla>
<![CDATA[
new DataTable('#example', {
	ajax: '../ajax/data/objects_salary.txt',
	columns: [
		{
			data: 'name'
		},
		{
			data: 'position',
			render: function (data, type) {
				if (type === 'display') {
					let link = 'http://datatables.net';

					if (data[0] < 'H') {
						link = 'http://cloudtables.com';
					}
					else if (data[0] < 'S') {
						link = 'http://editor.datatables.net';
					}

					return '<a href="' + link + '">' + data + '</a>';
				}

				return data;
			}
		},
		{
			className: 'f32', // used by world-flags-sprite library
			data: 'office',
			render: function (data, type) {
				if (type === 'display') {
					let country = '';

					switch (data) {
						case 'Argentina':
							country = 'ar';
							break;
						case 'Edinburgh':
							country = '_Scotland';
							break;
						case 'London':
							country = '_England';
							break;
						case 'New York':
						case 'San Francisco':
							country = 'us';
							break;
						case 'Sydney':
							country = 'au';
							break;
						case 'Tokyo':
							country = 'jp';
							break;
					}

					return '<span class="flag ' + country + '"></span> ' + data;
				}

				return data;
			}
		},
		{
			data: 'extn',
			render: function (data, type, row, meta) {
				return type === 'display'
					? '<progress value="' + data + '" max="9999"></progress>'
					: data;
			}
		},
		{
			data: 'start_date'
		},
		{
			data: 'salary',
			render: function (data, type) {
				var number = DataTable.render
					.number(',', '.', 2, '$')
					.display(data);

				if (type === 'display') {
					let color = 'green';
					if (data < 250000) {
						color = 'red';
					}
					else if (data < 500000) {
						color = 'orange';
					}

					return `<span style="color:${color}">${number}</span>`;
				}

				return number;
			}
		}
	]
});
]]>
</js-vanilla>

<info><![CDATA[

Data within DataTables can be easily rendered to add graphics or colour to your tables, as demonstrated in the example on this page. These examples make use of `dt-init columns.render` to customise the cells in three ways:

* A flag is added to the _Office_ column
* a HTML5 progress bar is added to the _Progress_ column
* and the built-in number renderer is used to format the _Salary_.

See the [data rendering manual page](https://datatables.net/manual/data/renderers) for more details on how to use data renderers. Also, this example uses [Ajax to load the data](https://datatables.net/manual/ajax). More [Ajax examples are available](../ajax).

]]></info>

</dt-example>
