<?xml version="1.0" encoding="UTF-8" ?>
<dt-example table-type="ajax" order="2">

<css lib="datatables" />
<js lib="jquery" />
<js lib="datatables" />

<title>Ajax sourced data</title>
<js><![CDATA[
$('#example').DataTable({
	ajax: '../ajax/data/arrays.txt'
});
]]></js>
<js-vanilla>
<![CDATA[
new DataTable('#example', {
	ajax: '../ajax/data/arrays.txt'
});
]]>
</js-vanilla>

<info><![CDATA[

DataTables has the ability to read data from virtually any JSON data source that can be obtained by Ajax. This can be done, in its most simple form, by setting the `dt-init ajax` option to the address of the JSON data source.

The `dt-init ajax` option also allows for more advanced configuration such as altering how the Ajax request is made. See the `dt-init ajax` documentation and the [other Ajax examples](../ajax) for further information.

The example below shows DataTables loading data for a table from arrays as the data source (object parameters can also be used through the `dt-init columns.data` option ).

]]></info>

</dt-example>
