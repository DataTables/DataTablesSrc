<?xml version="1.0" encoding="UTF-8" ?>
<dt-example table-type="html" order="14">

<css lib="datatables" />
<js lib="jquery" />
<js lib="datatables" />

<title>Custom toolbar elements</title>
<js><![CDATA[
$('#example').DataTable({
	layout: {
		topStart: $('<div class="toolbar"><b>Custom tool bar! Text/images etc.</b></div>')
	}
});
]]></js>
<js-vanilla><![CDATA[

new DataTable('#example', {
	layout: {
		topStart: function () {
			let toolbar = document.createElement('div');
			toolbar.innerHTML = '<b>Custom tool bar! Text/images etc.</b>';

			return toolbar;
		}
	}
});

]]></js-vanilla>

<info><![CDATA[

DataTables inserts DOM elements around the table to control DataTables features, and you can make use of this mechanism as well to insert your own custom elements. In this example a `-tag div` with a class of '-string toolbar' is created using the `-init layout` option's ability to accept jQuery and DOM nodes in addition to the feature name strings [seen in the controls positioning example](/basic_init/dom.html).

Using this method you can insert any controls around the table that you wish. To create reusable feature components that can be used similar to the built in ones, please refer to the feature plug-in documentation.

There are a number of [extensions for DataTables](//datatables.net/extensions) that make use of this ability. For example, [Buttons](//datatables.net/extensions/buttons) is a feature plug-in for DataTables that adds buttons into a toolbar for a table (copy to clipboard, save to Excel / PDF, and more).

]]></info>

</dt-example>
