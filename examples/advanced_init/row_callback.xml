<?xml version="1.0" encoding="UTF-8" ?>
<dt-example table-type="html" order="11">

<css lib="datatables">
	td.highlight {
		font-weight: bold;
		color: blue;
	}
</css>
<js lib="jquery" />
<js lib="datatables" />

<title>Row created callback</title>
<js><![CDATA[

$(document).ready(function() {
	$('#example').dataTable( {
		"createdRow": function ( row, data, index ) {
			if ( data[5].replace(/[\$,]/g, '') * 1 > 4000 ) {
				$('td', row).eq(5).addClass('highlight');
			}
		}
	} );
} );

]]></js>

<info><![CDATA[

The following example shows how a callback function can be used to format a particular row at draw time. For each row that is generated for display, the `dt-init createdRow` function is called once and once only. It is passed the create row node which can then be modified.

In this case a trivial example of making the 'salary' column blue and bold by adding a CSS class to the container cell if the salary is greater than $4,000. Note that `dt-init columns.createdCell` could also be used to create exactly the same effect.

]]></info>

</dt-example>
