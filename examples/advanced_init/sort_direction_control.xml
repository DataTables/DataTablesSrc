<?xml version="1.0" encoding="UTF-8" ?>
<dt-example table-type="html" order="15">

<css lib="datatables" />
<js lib="jquery" />
<js lib="datatables" />

<title>Order direction sequence control</title>
<js><![CDATA[

$(document).ready(function() {
	$('#example').dataTable( {
		"aoColumns": [
			null,
			null,
			{ "orderSequence": [ "asc" ] },
			{ "orderSequence": [ "desc", "asc", "asc" ] },
			{ "orderSequence": [ "desc" ] },
			null
		]
	} );
} );

]]></js>

<info><![CDATA[

At times you may wish to change the default ordering direction sequence for columns (some or all of them) to be 'descending' rather than DataTables' default ascending. This can be done through the use of the `dt-init columns.orderSequence` initialisation parameter. This parameter also allows you to limit the ordering to a single direction, or you could add complex behaviour to the ordering interaction.

The example below shows:

* Column 1 - default ordering
* Column 2 - default ordering
* Column 3 - ascending ordering only
* Column 4 - descending ordering, followed by ascending and then ascending again
* Column 5 - descending ordering only
* Column 6 - default ordering

It's worth noting that I don't have a good use case for when you might what to mix such complex ordering behaviour into a single table, but the example shows how these options can be use and therefore applied across all columns.

]]></info>

</dt-example>
