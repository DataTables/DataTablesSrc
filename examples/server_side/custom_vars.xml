<?xml version="1.0" encoding="UTF-8" ?>
<dt-example table-type="ssp" order="2">

<css lib="datatables" />
<js lib="jquery" />
<js lib="datatables" />

<title>Custom HTTP variables</title>
<js><![CDATA[
var table = $('#example').DataTable({
	ajax: {
		url: 'scripts/custom_vars.php',
		data: function (d) {
			d.officeFilter = $('#officeFilter').val();
			
			// Add additional parameters as needed
			// d.myKey = 'myValue';
		}
	},
	processing: true,
	serverSide: true
});

$('#officeFilter').on('keyup', function () {
	table.draw();
});

]]></js>
<js-vanilla>
<![CDATA[
let table = new DataTable('#example', {
	ajax: {
		url: 'scripts/custom_vars.php',
		data: function (d) {
			d.officeFilter = document.getElementById('officeFilter').value;

			// Add additional parameters as needed
			// d.myKey = 'myValue';
		}
	},
	processing: true,
	serverSide: true
});

document
	.getElementById('officeFilter')
	.addEventListener('keyup', function () {
		table.draw();
	});
]]>
</js-vanilla>

<info><![CDATA[

It can often be useful to send extra information to the server when utilising DataTables' server-side processing option. This is done by using the `dt-init ajax.data` option which can be used in one of two different ways:

* `object` - An object data to send to the server. This is useful for adding static data to the request.
* `function` - A function which will manipulate the data object to send to the server, adding values as required. Using the `data` parameter as a function allows the additional data to evaluated and added to the request at the time the request is made.

The example below shows server-side processing being used with an extra parameter being sent to the server by using the `ajax.data` option as a function. The data sent to the server is used to filter the "Office" column in this example.

Please note - **you do not need to use `-init serverSide` to be able to send extra data to the server with `-init ajax.data`**. This example is a demonstration of server-side processing which is typically used for [large data sets](https://datatables.net/manual/data/#Server-side-processing). If you are using `-init ajax`, the `-init ajax.data` option will still be processed, even if you are not using server-side processing.

]]></info>

<demo-html>
	<p>
		Office column filter: <input id="officeFilter" />
	</p>
</demo-html>

</dt-example>
