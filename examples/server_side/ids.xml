<?xml version="1.0" encoding="UTF-8" ?>
<dt-example table-type="ssp" order="4">

<css lib="datatables" />
<js lib="jquery" />
<js lib="datatables" />

<title>Automatic addition of row ID attributes</title>
<js><![CDATA[
$('#example').DataTable({
	ajax: 'scripts/ids-objects.php',
	columns: [
		{ data: 'first_name' },
		{ data: 'last_name' },
		{ data: 'position' },
		{ data: 'office' },
		{ data: 'start_date' },
		{ data: 'salary' }
	],
	processing: true,
	serverSide: true
});
]]></js>
<js-vanilla>
<![CDATA[
new DataTable('#example', {
	ajax: 'scripts/ids-objects.php',
	columns: [
		{ data: 'first_name' },
		{ data: 'last_name' },
		{ data: 'position' },
		{ data: 'office' },
		{ data: 'start_date' },
		{ data: 'salary' }
	],
	processing: true,
	serverSide: true
});
]]>
</js-vanilla>

<info><![CDATA[

Often when using server-side processing you will find that it can be useful to have a specific ID on each row (the primary key value from the database for example). By assigning the ID you want to apply to each row using the property `DT_RowId` of the data source object for each row (this property name can be configured using the `dt-init rowId` option), DataTables will automatically add it for you (note that this will work for Ajax and Javascript loaded data as well as for server-side processing).

In addition to `DT_RowId` there are other properties which perform similar actions - please refer to the [server-side processing section of the manual](https://datatables.net/manual/server-side) for full details.

This example below shows `DT_RowId` being used to add information to the table. In addition objects are used as the data source for the rows.

]]></info>

</dt-example>
