<?xml version="1.0" encoding="UTF-8" ?>
<dt-api group="columns">
	<name>columns().data()</name>
	<summary>Get the data for the cells in the selected columns.</summary>
	<since>1.10</since>

	<type type="function">
		<signature>columns().data()</signature>
		<description>Obtain the data for the columns from the selector</description>
		<returns type="DataTables.Api">DataTables API instance with data for each cell in the selected columns in the result set. This is a 2D array with the top level array entries for each column matched by the `dt-api columns()` selector.</returns>
	</type>

	<description>
		This method is used to get the data used for the cells in the columns matched by the selector from DataTables.

		Please note that the order of the data in the returned array and which rows the data is obtained from (searched rows, visible rows etc) is controlled by the `dt-type selector-modifier` option of the `dt-api columns()` selector used to get the selected columns.
	</description>

	<example title="Get a list of the unique data, sorted, from a single column"><![CDATA[
var table = new DataTable('#myTable');

$('#listData').html(
	table
		.columns(0)
		.data()
		.eq(0) // Reduce the 2D array into a 1D array of data
		.sort() // Sort data alphabetically
		.unique() // Reduce to unique values
		.join('<br>')
);
]]></example>

	<example title="Check if a value is in the data in the columns with a class of '.check'"><![CDATA[
var table = new DataTable('#myTable');

var idx = table
	.columns('.check')
	.data()
	.eq(0) // Reduce the 2D array into a 1D array of data
	.indexOf('Yes');

if (idx === -1) {
	alert('Yes not found');
}
else {
	alert('Yes was found');
}
]]></example>

	<related type="api">column().data()</related>
</dt-api>