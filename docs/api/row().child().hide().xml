<?xml version="1.0" encoding="UTF-8" ?>
<dt-api group="rows">
	<name>row().child().hide()</name>
	<summary>Hide child rows after creating new child rows</summary>
	<since>1.10</since>

	<type type="function">
		<signature>row().child().hide()</signature>
		<description>Hide the child row(s) of a parent row</description>
		<returns type="DataTables.Api">DataTables API instance.</returns>
	</type>

	<description>
		This method can be used to make the child rows of a parent row hidden at any time. When child row(s) are set as hidden they are not detached from the parent row, but rather simply not drawn on the page. This method provides a way of hiding a row at any required time.

		Please note that this method is only available when `dt-api row().child()` is called with a parameter set. This is because `dt-api row().child()` will return the child rows if called with no parameters, which is either a `-type jQuery` object or `-type undefined`. When called with a parameter `dt-api row().child()` returns a `-type DataTables.Api` instance. If you need to hide a child row without any parameters being set use `dt-api row().child.hide()`.

		It is worth saying that this method is probably of limited use, but it is included in the API for completeness!

		Unlike many of the other methods which manipulate the DataTable, this method does not require `dt-api draw()` to be called for the resulting change to be displayed. The child row(s) are inserted into the table without requiring that DataTables redraw.
	</description>

	<example title="Hide a child row immediately after setting its value"><![CDATA[
var table = $('#example').DataTable();

// Show an initial child row
table
	.row( ':eq(0)' )
	.child( 'Extra information...' )
	.show();

// Change the information and hide - without the hide() call the changed
// information would be visible due to the show() above.
table
	.row( ':eq(0)' )
	.child( 'Different information' )
	.hide()

]]></example>

</dt-api>
