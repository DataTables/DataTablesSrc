<?xml version="1.0" encoding="UTF-8" ?>
<dt-api group="columns">
	<name>column().cache()</name>
	<summary>Get the DataTables cached data for the selected column.</summary>
	<since>1.10</since>

	<deprecated since="2.0">
		<description>
			Use `-api column().render()` to get the data for a specific rendering type, rather than accessing DataTables' cache. This method will be removed in DataTables 3.
		</description>
	</deprecated>

	<type type="function">
		<signature>column().cache( [ type ] )</signature>
		<description>Obtain the data for the column from the selector</description>
		<parameter type="string" name="type" default="order">
			Specify which cache the data should be read from. Can take one of two values: `dt-string search` or `dt-string order`. Defaults to `order` if no value is given.
		</parameter>
		<returns type="DataTables.Api">DataTables API instance with data for each cell in the selected column in the result set. This is a 1D array with each entry being the data for the cells from the selected column.</returns>
	</type>

	<description>
		DataTables caches data for searching and ordering in order for those operations to run as quickly as possible when they are required. Sometimes it can be useful to get the data that DataTables has cached for these operations, for example when creating a `select` list to provide a column based filter.

		Cached data is not guaranteed to be available at any particular moment. If DataTables hasn't requested the data, it won't have been cached. This is particularly obvious when using the `-string order` option and a sort hasn't been performed on a column. Invalidation of data will also cause the cache to be removed.

		Please note that the order of the data in the returned array and which rows the data is obtained from (searched rows, visible rows etc) is controlled by the `dt-type selector-modifier` option of the `dt-api column()` selector used to get the selected column.

		Additionally, if the selector used in `dt-api column()` matches more than one column, the result set will be truncated to a single column - the first one in the result set.
	</description>

	<related type="api">columns().cache()</related>
</dt-api>