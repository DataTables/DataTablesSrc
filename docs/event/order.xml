<?xml version="1.0" encoding="UTF-8" ?>
<dt-event>
	<name>order</name>
	<summary>order event - fired when the data contained in the table is ordered.</summary>
	<since>1.10</since>

	<type type="function">
		<signature>function( e, settings )</signature>
		<parameter type="object" name="e">
			jQuery event object
		</parameter>
		<parameter type="DataTables.Settings" name="settings">
			DataTables settings object
		</parameter>
		<scope>HTML table element</scope>
	</type>

	<description>
		The `dt-event order` event is fired whenever the data in the table is ordered. This is typically triggered by the end user ordering a column, but can also be initiated through the `dt-api order()` method and when a full redraw (by calling the `dt-api draw()`) occurs.

		Note that the `dt-event page` will be fired before the table has been redrawn with the updated data, although the data will internally have been ordered.

		Please note that, as with all DataTables emitted events, this event is triggered with the `dt` namespace. As such, to listen for this event, you must also use the `dt` namespace by simply appending `.dt` to your event name, as shown in the example below.
	</description>

	<example title="Show information about the current order using the API"><![CDATA[
var table = $('#example').DataTable();

$('#example').on( 'order.dt', function () {
	// This will show: "Ordering on column 1 (asc)", for example
	var order = table.order();
	$('#orderInfo').html( 'Ordering on column '+order[0][0]+' ('+order[0][1]+')' );
} );
]]></example>

	<related type="option">ordering</related>
	<related type="option">columns.orderable</related>
	<related type="api">draw()</related>
	<related type="api">order()</related>
	<related type="api">column().order()</related>
	<related type="api">columns().order()</related>
</dt-event>