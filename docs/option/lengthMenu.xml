<?xml version="1.0" encoding="UTF-8" ?>
<dt-option group="option">
	<name>lengthMenu</name>
	<summary>Change the options in the page length `select` list.</summary>
	<since>1.10</since>

	<type type="array" />
	<default>[ 10, 25, 50, 100 ]</default>

	<description>
		This parameter allows you to readily specify the entries in the length drop down `select` list that DataTables shows when pagination is enabled. It is an array of options - each option can either be:

		* An integer which will be used for both the displayed option and the value to use for the display length, or
		* An object which contains `label` and `value` properties. This can be useful for language strings such as `All`.

		The page length values must always be integer values `> 0`, with the sole exception of `-1`. When `-1` is used as a value this tells DataTables to disable pagination (i.e. display all rows).

		Note that the `dt-init pageLength` property will be automatically set to the first value given in this array, unless `dt-init pageLength` is also provided.

		### Legacy

		DataTables 1.x used a 2D array rather than objects to support languages. The first inner array is the page length values and the second inner array is the displayed options. This is still supported in DataTables 2, although now deprecated.
	</description>

	<example title="Show options 10, 25, 50, 75 and 100 records"><![CDATA[
$('#example').DataTable( {
  lengthMenu: [ 10, 25, 50, 75, 100 ]
} );
]]></example>

	<example title="Show options 10, 25, 50 and all records"><![CDATA[
$('#example').DataTable( {
	lengthMenu: [
		10,
		25,
		50,
		{ label: 'All', value: -1 }
	]
} );
]]></example>

	<related type="option">paging</related>
	<related type="option">lengthChange</related>
	<related type="option">pageLength</related>
	<related type="api">page()</related>
	<related type="api">page.info()</related>
	<related type="api">page.len()</related>
</dt-option>