<?xml version="1.0" encoding="UTF-8" ?>
<dt-option group="i18n">
	<name>language.lengthMenu</name>
	<summary>Page length options string</summary>
	<since>1.10</since>

	<type type="string" />
	<default value="_MENU_ _ENTRIES_ per page" />

	<description>
		Detail the action that will be taken when the drop down menu for the pagination length option is changed. The token `string _MENU_` is replaced with a default select list of 10, 25, 50 and 100 (or any other value specified by `dt-init lengthMenu`), and can be replaced with a custom select list if required. This option is a per-table setting for `-feature pageLength.text` which can be used to override this option (for example if two or more page length controls were available for a table).

		As of DataTables 2 the DOM structure that is generated can change based on the location of the `_MENU_` token in the string. If the token is at the start or the end of the string, the generated DOM will have the `-tag select` outside of the `-tag label`. This is done for accessability to allow an _explicit_ link between the `-tag select` and `-tag label` (see [this article for more details](https://css-tricks.com/html-inputs-and-labels-a-love-story/#aa-how-to-pair-a-label-and-an-input)).

		If the token is in the middle of the string, the DOM structure created will have the `-tag select` nested in the `-tag label`, creating an _implicit_ link (although the `for` and `id` attributes are still set). Some screenreaders can struggle with this form and it is not recommended.

		This DOM structure distinction is only of significance if you are applying custom styling to the page. You _may_ need to alter your CSS depending on the string used.

		Additionally, this property can benefit from the use of `-init language.entries` to easily update the string to relate to the specific type of data shown in the table. It's plural will automatically resolve with the number selected in from the list of options. The `_ENTRIES_` replacement token should be used where you want the resolved `-init language.entries` value to appear.
	</description>

	<example title="Language change only"><![CDATA[
$('#example').DataTable( {
  language: {
    lengthMenu: 'Display _MENU_ records'
  }
} );
]]></example>

	<example title="Language change using entries"><![CDATA[
$('#example').DataTable( {
  language: {
    lengthMenu: 'Display _MENU_ _ENTRIES_',
	entries: {
		_: 'people',
		1: 'person'
	}
  }
} );
]]></example>

	<example title="Language and options change (you'd be better off using `lengthMenu` though!"><![CDATA[
$('#example').dataTable( {
  "language": {
    "lengthMenu": 'Display <select>'+
      '<option value="10">10</option>'+
      '<option value="20">20</option>'+
      '<option value="30">30</option>'+
      '<option value="40">40</option>'+
      '<option value="50">50</option>'+
      '<option value="-1">All</option>'+
      '</select> records'
  }
} );
]]></example>

	<related type="option">language</related>
	<related type="option">lengthChange</related>
	<related type="option">lengthMenu</related>
	<related type="option">language.entries</related>
	<related type="api">page.len()</related>
	<related>-feature pageLength</related>
	<related>-feature pageLength.text</related>
</dt-option>